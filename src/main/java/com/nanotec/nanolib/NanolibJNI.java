/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.nanotec.nanolib;

public class NanolibJNI {
  public final static native void imaxdiv_t_quot_set(long jarg1, imaxdiv_t jarg1_, long jarg2);
  public final static native long imaxdiv_t_quot_get(long jarg1, imaxdiv_t jarg1_);
  public final static native void imaxdiv_t_rem_set(long jarg1, imaxdiv_t jarg1_, long jarg2);
  public final static native long imaxdiv_t_rem_get(long jarg1, imaxdiv_t jarg1_);
  public final static native long new_imaxdiv_t();
  public final static native void delete_imaxdiv_t(long jarg1);
  public final static native long new_OdIndex__SWIG_0(int jarg1, short jarg2);
  public final static native long new_OdIndex__SWIG_1();
  public final static native int OdIndex_getIndex(long jarg1, OdIndex jarg1_);
  public final static native short OdIndex_getSubIndex(long jarg1, OdIndex jarg1_);
  public final static native String OdIndex_toString(long jarg1, OdIndex jarg1_);
  public final static native void delete_OdIndex(long jarg1);
  public final static native int NlcErrorCode_Success_get();
  public final static native int NlcErrorCode_GeneralError_get();
  public final static native int NlcErrorCode_BusUnavailable_get();
  public final static native int NlcErrorCode_CommunicationError_get();
  public final static native int NlcErrorCode_ProtocolError_get();
  public final static native int NlcErrorCode_ODDoesNotExist_get();
  public final static native int NlcErrorCode_OperationAborted_get();
  public final static native int NlcErrorCode_OperationNotSupported_get();
  public final static native long new_BusHardwareId__SWIG_0(String jarg1, String jarg2, String jarg3, String jarg4);
  public final static native long new_BusHardwareId__SWIG_1(String jarg1, String jarg2, String jarg3, String jarg4, String jarg5);
  public final static native void delete_BusHardwareId(long jarg1);
  public final static native long new_BusHardwareId__SWIG_2(long jarg1, BusHardwareId jarg1_);
  public final static native long new_BusHardwareId__SWIG_3();
  public final static native String BusHardwareId_getBusHardware(long jarg1, BusHardwareId jarg1_);
  public final static native String BusHardwareId_getProtocol(long jarg1, BusHardwareId jarg1_);
  public final static native String BusHardwareId_getHardwareSpecifier(long jarg1, BusHardwareId jarg1_);
  public final static native String BusHardwareId_getExtraHardwareSpecifier(long jarg1, BusHardwareId jarg1_);
  public final static native String BusHardwareId_getName(long jarg1, BusHardwareId jarg1_);
  public final static native boolean BusHardwareId_equals(long jarg1, BusHardwareId jarg1_, long jarg2, BusHardwareId jarg2_);
  public final static native String BusHardwareId_toString(long jarg1, BusHardwareId jarg1_);
  public final static native long new_BusHardwareOptions__SWIG_0();
  public final static native long new_BusHardwareOptions__SWIG_1(long jarg1, StringStringMap jarg1_);
  public final static native void BusHardwareOptions_addOption(long jarg1, BusHardwareOptions jarg1_, String jarg2, String jarg3);
  public final static native long BusHardwareOptions_getOptions(long jarg1, BusHardwareOptions jarg1_);
  public final static native boolean BusHardwareOptions_equals(long jarg1, BusHardwareOptions jarg1_, long jarg2, BusHardwareOptions jarg2_);
  public final static native String BusHardwareOptions_toString(long jarg1, BusHardwareOptions jarg1_);
  public final static native void delete_BusHardwareOptions(long jarg1);
  public final static native long new_DeviceId__SWIG_0(long jarg1, BusHardwareId jarg1_, long jarg2, String jarg3);
  public final static native long new_DeviceId__SWIG_1(long jarg1, BusHardwareId jarg1_, long jarg2, String jarg3, long jarg4, ByteVector jarg4_, String jarg5);
  public final static native long new_DeviceId__SWIG_2(long jarg1, DeviceId jarg1_);
  public final static native long new_DeviceId__SWIG_3();
  public final static native long DeviceId_getBusHardwareId(long jarg1, DeviceId jarg1_);
  public final static native long DeviceId_getDeviceId(long jarg1, DeviceId jarg1_);
  public final static native String DeviceId_getDescription(long jarg1, DeviceId jarg1_);
  public final static native long DeviceId_getExtraId(long jarg1, DeviceId jarg1_);
  public final static native String DeviceId_getExtraStringId(long jarg1, DeviceId jarg1_);
  public final static native String DeviceId_toString(long jarg1, DeviceId jarg1_);
  public final static native boolean DeviceId_equals(long jarg1, DeviceId jarg1_, long jarg2, DeviceId jarg2_);
  public final static native void delete_DeviceId(long jarg1);
  public final static native long new_DeviceHandle();
  public final static native boolean DeviceHandle_equals(long jarg1, DeviceHandle jarg1_, long jarg2, DeviceHandle jarg2_);
  public final static native String DeviceHandle_toString(long jarg1, DeviceHandle jarg1_);
  public final static native void delete_DeviceHandle(long jarg1);
  public final static native int ObjectCode_Null_get();
  public final static native int ObjectCode_Deftype_get();
  public final static native int ObjectCode_Defstruct_get();
  public final static native int ObjectCode_Var_get();
  public final static native int ObjectCode_Array_get();
  public final static native int ObjectCode_Record_get();
  public final static native int ObjectSdoAccessAttribute_ReadOnly_get();
  public final static native int ObjectSdoAccessAttribute_WriteOnly_get();
  public final static native int ObjectSdoAccessAttribute_ReadWrite_get();
  public final static native int ObjectSdoAccessAttribute_NoAccess_get();
  public final static native int ObjectPdoAccessAttribute_Tx_get();
  public final static native int ObjectPdoAccessAttribute_Rx_get();
  public final static native int ObjectPdoAccessAttribute_TxRx_get();
  public final static native int ObjectPdoAccessAttribute_No_get();
  public final static native int ObjectEntryDataType_Invalid_get();
  public final static native int ObjectEntryDataType_Boolean_get();
  public final static native int ObjectEntryDataType_Integer8_get();
  public final static native int ObjectEntryDataType_Integer16_get();
  public final static native int ObjectEntryDataType_Integer32_get();
  public final static native int ObjectEntryDataType_Unsigned8_get();
  public final static native int ObjectEntryDataType_Unsigned16_get();
  public final static native int ObjectEntryDataType_Unsigned32_get();
  public final static native int ObjectEntryDataType_Real32_get();
  public final static native int ObjectEntryDataType_VisibleString_get();
  public final static native int ObjectEntryDataType_OctetString_get();
  public final static native int ObjectEntryDataType_UnicodeString_get();
  public final static native int ObjectEntryDataType_TimeOfDay_get();
  public final static native int ObjectEntryDataType_TimeDifference_get();
  public final static native int ObjectEntryDataType_Domain_get();
  public final static native int ObjectEntryDataType_Integer24_get();
  public final static native int ObjectEntryDataType_Real64_get();
  public final static native int ObjectEntryDataType_Integer40_get();
  public final static native int ObjectEntryDataType_Integer48_get();
  public final static native int ObjectEntryDataType_Integer56_get();
  public final static native int ObjectEntryDataType_Integer64_get();
  public final static native int ObjectEntryDataType_Unsigned24_get();
  public final static native int ObjectEntryDataType_Unsigned40_get();
  public final static native int ObjectEntryDataType_Unsigned48_get();
  public final static native int ObjectEntryDataType_Unsigned56_get();
  public final static native int ObjectEntryDataType_Unsigned64_get();
  public final static native int ObjectEntryDataType_PdoCommunicationParameter_get();
  public final static native int ObjectEntryDataType_PdoMapping_get();
  public final static native int ObjectEntryDataType_Identity_get();
  public final static native int ObjectEntryDataType_SyncmgrSynchronization_get();
  public final static native int ObjectEntryDataType_UserStorageArea_get();
  public final static native int ObjectEntryDataType_SamplerConfig_get();
  public final static native int ObjectEntryDataType_SamplerTimebase_get();
  public final static native int ObjectEntryDataType_PdiInput_get();
  public final static native int ObjectEntryDataType_PdiOutput_get();
  public final static native int ObjectEntryDataType_ClosedLoopControllerParameter_get();
  public final static native int ObjectEntryDataType_OpenLoopControllerParameter_get();
  public final static native int ObjectEntryDataType_SsiEncoder_get();
  public final static native int ObjectEntryDataType_N2_get();
  public final static native int ObjectEntryDataType_N4_get();
  public final static native int ObjectEntryDataType_V2_get();
  public final static native int ObjectEntryDataType_X2_get();
  public final static native int ObjectEntryDataType_X4_get();
  public final static native int ObjectEntryDataType_InterpolationTimePeriod_get();
  public final static native int ObjectEntryDataType_InterpolationDataConfiguration_get();
  public final static native int ObjectEntryDataType_VelocityAccelerationDeceleration_get();
  public final static native int ObjectEntryDataType_Simple_get();
  public final static native int ObjectEntryDataType_Complex_get();
  public final static native int ObjectEntryDataType_Unknown_get();
  public final static native int OdTypesHelper_uintToObjectCode(long jarg1);
  public final static native boolean OdTypesHelper_isNumericDataType(int jarg1);
  public final static native boolean OdTypesHelper_isDefstructIndex(int jarg1);
  public final static native boolean OdTypesHelper_isDeftypeIndex(int jarg1);
  public final static native boolean OdTypesHelper_isComplexDataType(int jarg1);
  public final static native int OdTypesHelper_uintToObjectEntryDataType(int jarg1);
  public final static native String OdTypesHelper_objectEntryDataTypeToString(int jarg1);
  public final static native int OdTypesHelper_stringToObjectEntryDatatype(String jarg1);
  public final static native long OdTypesHelper_objectEntryDataTypeBitLength(int jarg1);
  public final static native int NANOTEC_VENDOR_ID_get();
  public final static native String CanOpenNmtState_STOPPED_get(long jarg1, CanOpenNmtState jarg1_);
  public final static native String CanOpenNmtState_PRE_OPERATIONAL_get(long jarg1, CanOpenNmtState jarg1_);
  public final static native String CanOpenNmtState_OPERATIONAL_get(long jarg1, CanOpenNmtState jarg1_);
  public final static native String CanOpenNmtState_INITIALIZATION_get(long jarg1, CanOpenNmtState jarg1_);
  public final static native String CanOpenNmtState_UNKNOWN_get(long jarg1, CanOpenNmtState jarg1_);
  public final static native long new_CanOpenNmtState();
  public final static native void delete_CanOpenNmtState(long jarg1);
  public final static native String CanOpenNmtService_START_get(long jarg1, CanOpenNmtService jarg1_);
  public final static native String CanOpenNmtService_STOP_get(long jarg1, CanOpenNmtService jarg1_);
  public final static native String CanOpenNmtService_PRE_OPERATIONAL_get(long jarg1, CanOpenNmtService jarg1_);
  public final static native String CanOpenNmtService_RESET_get(long jarg1, CanOpenNmtService jarg1_);
  public final static native String CanOpenNmtService_RESET_COMMUNICATION_get(long jarg1, CanOpenNmtService jarg1_);
  public final static native long new_CanOpenNmtService();
  public final static native void delete_CanOpenNmtService(long jarg1);
  public final static native String EtherCATState_NONE_get(long jarg1, EtherCATState jarg1_);
  public final static native String EtherCATState_INIT_get(long jarg1, EtherCATState jarg1_);
  public final static native String EtherCATState_PRE_OPERATIONAL_get(long jarg1, EtherCATState jarg1_);
  public final static native String EtherCATState_BOOT_get(long jarg1, EtherCATState jarg1_);
  public final static native String EtherCATState_SAFE_OPERATIONAL_get(long jarg1, EtherCATState jarg1_);
  public final static native String EtherCATState_OPERATIONAL_get(long jarg1, EtherCATState jarg1_);
  public final static native long new_EtherCATState();
  public final static native void delete_EtherCATState(long jarg1);
  public final static native long canOpenNmtState_get();
  public final static native long canOpenNmtService_get();
  public final static native long EtherCATStates_get();
  public final static native int LOG_LEVEL_TRACE_get();
  public final static native int LOG_LEVEL_DEBUG_get();
  public final static native int LOG_LEVEL_INFO_get();
  public final static native int LOG_LEVEL_WARN_get();
  public final static native int LOG_LEVEL_ERROR_get();
  public final static native int LOG_LEVEL_CRITICAL_get();
  public final static native int LOG_LEVEL_OFF_get();
  public final static native int LogLevel_Trace_get();
  public final static native int LogLevel_Debug_get();
  public final static native int LogLevel_Info_get();
  public final static native int LogLevel_Warning_get();
  public final static native int LogLevel_Error_get();
  public final static native int LogLevel_Critical_get();
  public final static native int LogLevel_Off_get();
  public final static native int LogModule_NanolibCore_get();
  public final static native String LogLevelConverter_toString(int jarg1);
  public final static native long new_LogLevelConverter();
  public final static native void delete_LogLevelConverter(long jarg1);
  public final static native String LogModuleConverter_toString(int jarg1);
  public final static native long new_LogModuleConverter();
  public final static native void delete_LogModuleConverter(long jarg1);
  public final static native void delete_Result(long jarg1);
  public final static native boolean Result_hasError(long jarg1, Result jarg1_);
  public final static native String Result_getError(long jarg1, Result jarg1_);
  public final static native int Result_getErrorCode(long jarg1, Result jarg1_);
  public final static native long Result_getExErrorCode(long jarg1, Result jarg1_);
  public final static native long new_ResultVoid__SWIG_0();
  public final static native long new_ResultVoid__SWIG_1(String jarg1);
  public final static native long new_ResultVoid__SWIG_2(int jarg1, String jarg2);
  public final static native long new_ResultVoid__SWIG_3(int jarg1, long jarg2, String jarg3);
  public final static native long new_ResultVoid__SWIG_4(long jarg1, Result jarg1_);
  public final static native void delete_ResultVoid(long jarg1);
  public final static native long new_ResultInt__SWIG_0(long jarg1);
  public final static native long new_ResultInt__SWIG_1(String jarg1);
  public final static native long new_ResultInt__SWIG_2(int jarg1, String jarg2);
  public final static native long new_ResultInt__SWIG_3(int jarg1, long jarg2, String jarg3);
  public final static native long new_ResultInt__SWIG_4(long jarg1, Result jarg1_);
  public final static native void delete_ResultInt(long jarg1);
  public final static native long ResultInt_getResult(long jarg1, ResultInt jarg1_);
  public final static native long new_ResultString__SWIG_0(String jarg1, boolean jarg2);
  public final static native long new_ResultString__SWIG_1(int jarg1, String jarg2);
  public final static native long new_ResultString__SWIG_2(int jarg1, long jarg2, String jarg3);
  public final static native long new_ResultString__SWIG_3(long jarg1, Result jarg1_);
  public final static native void delete_ResultString(long jarg1);
  public final static native String ResultString_getResult(long jarg1, ResultString jarg1_);
  public final static native long new_ResultArrayInt__SWIG_0(long jarg1, IntVector jarg1_);
  public final static native long new_ResultArrayInt__SWIG_1(String jarg1);
  public final static native long new_ResultArrayInt__SWIG_2(int jarg1, String jarg2);
  public final static native long new_ResultArrayInt__SWIG_3(int jarg1, long jarg2, String jarg3);
  public final static native long new_ResultArrayInt__SWIG_4(long jarg1, Result jarg1_);
  public final static native void delete_ResultArrayInt(long jarg1);
  public final static native long ResultArrayInt_getResult(long jarg1, ResultArrayInt jarg1_);
  public final static native long new_ResultArrayByte__SWIG_0(long jarg1, ByteVector jarg1_);
  public final static native long new_ResultArrayByte__SWIG_1(String jarg1);
  public final static native long new_ResultArrayByte__SWIG_2(int jarg1, String jarg2);
  public final static native long new_ResultArrayByte__SWIG_3(int jarg1, long jarg2, String jarg3);
  public final static native long new_ResultArrayByte__SWIG_4(long jarg1, Result jarg1_);
  public final static native void delete_ResultArrayByte(long jarg1);
  public final static native long ResultArrayByte_getResult(long jarg1, ResultArrayByte jarg1_);
  public final static native long new_ResultBusHwIds__SWIG_0(long jarg1, BusHWIdVector jarg1_);
  public final static native long new_ResultBusHwIds__SWIG_1(String jarg1);
  public final static native long new_ResultBusHwIds__SWIG_2(int jarg1, String jarg2);
  public final static native long new_ResultBusHwIds__SWIG_3(int jarg1, long jarg2, String jarg3);
  public final static native long new_ResultBusHwIds__SWIG_4(long jarg1, Result jarg1_);
  public final static native void delete_ResultBusHwIds(long jarg1);
  public final static native long ResultBusHwIds_getResult(long jarg1, ResultBusHwIds jarg1_);
  public final static native long new_ResultDeviceId__SWIG_0(long jarg1, DeviceId jarg1_);
  public final static native long new_ResultDeviceId__SWIG_1(String jarg1);
  public final static native long new_ResultDeviceId__SWIG_2(int jarg1, String jarg2);
  public final static native long new_ResultDeviceId__SWIG_3(int jarg1, long jarg2, String jarg3);
  public final static native long new_ResultDeviceId__SWIG_4(long jarg1, Result jarg1_);
  public final static native void delete_ResultDeviceId(long jarg1);
  public final static native long ResultDeviceId_getResult(long jarg1, ResultDeviceId jarg1_);
  public final static native long new_ResultDeviceIds__SWIG_0(long jarg1, DeviceIdVector jarg1_);
  public final static native long new_ResultDeviceIds__SWIG_1(String jarg1);
  public final static native long new_ResultDeviceIds__SWIG_2(int jarg1, String jarg2);
  public final static native long new_ResultDeviceIds__SWIG_3(int jarg1, long jarg2, String jarg3);
  public final static native long new_ResultDeviceIds__SWIG_4(long jarg1, Result jarg1_);
  public final static native void delete_ResultDeviceIds(long jarg1);
  public final static native long ResultDeviceIds_getResult(long jarg1, ResultDeviceIds jarg1_);
  public final static native long new_ResultDeviceHandle__SWIG_0(long jarg1, DeviceHandle jarg1_);
  public final static native long new_ResultDeviceHandle__SWIG_1(String jarg1);
  public final static native long new_ResultDeviceHandle__SWIG_2(int jarg1, String jarg2);
  public final static native long new_ResultDeviceHandle__SWIG_3(int jarg1, long jarg2, String jarg3);
  public final static native long new_ResultDeviceHandle__SWIG_4(long jarg1, Result jarg1_);
  public final static native void delete_ResultDeviceHandle(long jarg1);
  public final static native long ResultDeviceHandle_getResult(long jarg1, ResultDeviceHandle jarg1_);
  public final static native long new_ResultConnectionState__SWIG_0(int jarg1);
  public final static native long new_ResultConnectionState__SWIG_1(String jarg1);
  public final static native long new_ResultConnectionState__SWIG_2(int jarg1, String jarg2);
  public final static native long new_ResultConnectionState__SWIG_3(int jarg1, long jarg2, String jarg3);
  public final static native long new_ResultConnectionState__SWIG_4(long jarg1, Result jarg1_);
  public final static native void delete_ResultConnectionState(long jarg1);
  public final static native int ResultConnectionState_getResult(long jarg1, ResultConnectionState jarg1_);
  public final static native long new_ResultObjectEntry__SWIG_0(long jarg1, ObjectEntry jarg1_);
  public final static native long new_ResultObjectEntry__SWIG_1(String jarg1);
  public final static native long new_ResultObjectEntry__SWIG_2(int jarg1, String jarg2);
  public final static native long new_ResultObjectEntry__SWIG_3(int jarg1, long jarg2, String jarg3);
  public final static native long new_ResultObjectEntry__SWIG_4(long jarg1, Result jarg1_);
  public final static native void delete_ResultObjectEntry(long jarg1);
  public final static native long ResultObjectEntry_getResult(long jarg1, ResultObjectEntry jarg1_);
  public final static native long new_ResultObjectSubEntry__SWIG_0(long jarg1, ObjectSubEntry jarg1_);
  public final static native long new_ResultObjectSubEntry__SWIG_1(String jarg1);
  public final static native long new_ResultObjectSubEntry__SWIG_2(int jarg1, String jarg2);
  public final static native long new_ResultObjectSubEntry__SWIG_3(int jarg1, long jarg2, String jarg3);
  public final static native long new_ResultObjectSubEntry__SWIG_4(long jarg1, Result jarg1_);
  public final static native void delete_ResultObjectSubEntry(long jarg1);
  public final static native long ResultObjectSubEntry_getResult(long jarg1, ResultObjectSubEntry jarg1_);
  public final static native long new_ResultObjectDictionary__SWIG_0(long jarg1, ObjectDictionary jarg1_);
  public final static native long new_ResultObjectDictionary__SWIG_1(String jarg1);
  public final static native long new_ResultObjectDictionary__SWIG_2(int jarg1, String jarg2);
  public final static native long new_ResultObjectDictionary__SWIG_3(int jarg1, long jarg2, String jarg3);
  public final static native long new_ResultObjectDictionary__SWIG_4(long jarg1, Result jarg1_);
  public final static native void delete_ResultObjectDictionary(long jarg1);
  public final static native long ResultObjectDictionary_getResult(long jarg1, ResultObjectDictionary jarg1_);
  public final static native void delete_NlcCallback(long jarg1);
  public final static native long NlcCallback_callback(long jarg1, NlcCallback jarg1_);
  public final static native long new_NlcCallback();
  public final static native void NlcCallback_director_connect(NlcCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void NlcCallback_change_ownership(NlcCallback obj, long cptr, boolean take_or_release);
  public final static native void delete_NlcDataTransferCallback(long jarg1);
  public final static native long NlcDataTransferCallback_callback(long jarg1, NlcDataTransferCallback jarg1_, int jarg2, int jarg3);
  public final static native long new_NlcDataTransferCallback();
  public final static native void NlcDataTransferCallback_director_connect(NlcDataTransferCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void NlcDataTransferCallback_change_ownership(NlcDataTransferCallback obj, long cptr, boolean take_or_release);
  public final static native void delete_NlcScanBusCallback(long jarg1);
  public final static native long NlcScanBusCallback_callback(long jarg1, NlcScanBusCallback jarg1_, int jarg2, long jarg3, DeviceIdVector jarg3_, int jarg4);
  public final static native long new_NlcScanBusCallback();
  public final static native void NlcScanBusCallback_director_connect(NlcScanBusCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void NlcScanBusCallback_change_ownership(NlcScanBusCallback obj, long cptr, boolean take_or_release);
  public final static native void delete_NlcLoggingCallback(long jarg1);
  public final static native void NlcLoggingCallback_callback(long jarg1, NlcLoggingCallback jarg1_, String jarg2, String jarg3, String jarg4, long jarg5, java.math.BigInteger jarg6, long jarg7);
  public final static native long new_NlcLoggingCallback();
  public final static native void NlcLoggingCallback_director_connect(NlcLoggingCallback obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void NlcLoggingCallback_change_ownership(NlcLoggingCallback obj, long cptr, boolean take_or_release);
  public final static native void delete_OdLibrary(long jarg1);
  public final static native long OdLibrary_getObjectDictionaryCount(long jarg1, OdLibrary jarg1_);
  public final static native long OdLibrary_getObjectDictionary(long jarg1, OdLibrary jarg1_, long jarg2);
  public final static native long OdLibrary_addObjectDictionaryFromFile(long jarg1, OdLibrary jarg1_, String jarg2);
  public final static native long OdLibrary_addObjectDictionary__SWIG_0(long jarg1, OdLibrary jarg1_, long jarg2, ByteVector jarg2_, String jarg3);
  public final static native long OdLibrary_addObjectDictionary__SWIG_1(long jarg1, OdLibrary jarg1_, long jarg2, ByteVector jarg2_);
  public final static native void ProfinetDevice_deviceName_set(long jarg1, ProfinetDevice jarg1_, String jarg2);
  public final static native String ProfinetDevice_deviceName_get(long jarg1, ProfinetDevice jarg1_);
  public final static native void ProfinetDevice_deviceVendor_set(long jarg1, ProfinetDevice jarg1_, String jarg2);
  public final static native String ProfinetDevice_deviceVendor_get(long jarg1, ProfinetDevice jarg1_);
  public final static native void ProfinetDevice_macAddress_set(long jarg1, ProfinetDevice jarg1_, long jarg2, MacAddress jarg2_);
  public final static native long ProfinetDevice_macAddress_get(long jarg1, ProfinetDevice jarg1_);
  public final static native void ProfinetDevice_ipAddress_set(long jarg1, ProfinetDevice jarg1_, long jarg2);
  public final static native long ProfinetDevice_ipAddress_get(long jarg1, ProfinetDevice jarg1_);
  public final static native void ProfinetDevice_netMask_set(long jarg1, ProfinetDevice jarg1_, long jarg2);
  public final static native long ProfinetDevice_netMask_get(long jarg1, ProfinetDevice jarg1_);
  public final static native void ProfinetDevice_defaultGateway_set(long jarg1, ProfinetDevice jarg1_, long jarg2);
  public final static native long ProfinetDevice_defaultGateway_get(long jarg1, ProfinetDevice jarg1_);
  public final static native long new_ProfinetDevice();
  public final static native void delete_ProfinetDevice(long jarg1);
  public final static native long new_ResultProfinetDevices__SWIG_0(long jarg1, ProfinetDeviceVector jarg1_);
  public final static native long new_ResultProfinetDevices__SWIG_1(long jarg1, Result jarg1_);
  public final static native long new_ResultProfinetDevices__SWIG_2(String jarg1, int jarg2, long jarg3);
  public final static native long new_ResultProfinetDevices__SWIG_3(String jarg1, int jarg2);
  public final static native long new_ResultProfinetDevices__SWIG_4(String jarg1);
  public final static native long ResultProfinetDevices_getResult(long jarg1, ResultProfinetDevices jarg1_);
  public final static native void delete_ResultProfinetDevices(long jarg1);
  public final static native void delete_ProfinetDCP(long jarg1);
  public final static native long ProfinetDCP_getScanTimeout(long jarg1, ProfinetDCP jarg1_);
  public final static native void ProfinetDCP_setScanTimeout(long jarg1, ProfinetDCP jarg1_, long jarg2);
  public final static native long ProfinetDCP_getResponseTimeout(long jarg1, ProfinetDCP jarg1_);
  public final static native void ProfinetDCP_setResponseTimeout(long jarg1, ProfinetDCP jarg1_, long jarg2);
  public final static native long ProfinetDCP_isServiceAvailable(long jarg1, ProfinetDCP jarg1_, long jarg2, BusHardwareId jarg2_);
  public final static native long ProfinetDCP_scanProfinetDevices(long jarg1, ProfinetDCP jarg1_, long jarg2, BusHardwareId jarg2_);
  public final static native long ProfinetDCP_setupProfinetDevice(long jarg1, ProfinetDCP jarg1_, long jarg2, BusHardwareId jarg2_, long jarg3, ProfinetDevice jarg3_, boolean jarg4);
  public final static native long ProfinetDCP_resetProfinetDevice(long jarg1, ProfinetDCP jarg1_, long jarg2, BusHardwareId jarg2_, long jarg3, ProfinetDevice jarg3_);
  public final static native long ProfinetDCP_blinkProfinetDevice(long jarg1, ProfinetDCP jarg1_, long jarg2, BusHardwareId jarg2_, long jarg3, ProfinetDevice jarg3_);
  public final static native long ProfinetDCP_validateProfinetDeviceIp(long jarg1, ProfinetDCP jarg1_, long jarg2, BusHardwareId jarg2_, long jarg3, ProfinetDevice jarg3_);
  public final static native long new_ResultSamplerState__SWIG_0(int jarg1);
  public final static native long new_ResultSamplerState__SWIG_1(String jarg1, int jarg2, long jarg3);
  public final static native long new_ResultSamplerState__SWIG_2(String jarg1, int jarg2);
  public final static native long new_ResultSamplerState__SWIG_3(String jarg1);
  public final static native long new_ResultSamplerState__SWIG_4(long jarg1, ResultSamplerState jarg1_);
  public final static native long new_ResultSamplerState__SWIG_5(long jarg1, Result jarg1_);
  public final static native void delete_ResultSamplerState(long jarg1);
  public final static native int ResultSamplerState_getResult(long jarg1, ResultSamplerState jarg1_);
  public final static native int SamplerTriggerCondition_TC_FALSE_get();
  public final static native int SamplerTriggerCondition_TC_TRUE_get();
  public final static native int SamplerTriggerCondition_TC_SET_get();
  public final static native int SamplerTriggerCondition_TC_CLEAR_get();
  public final static native int SamplerTriggerCondition_TC_RISING_EDGE_get();
  public final static native int SamplerTriggerCondition_TC_FALLING_EDGE_get();
  public final static native int SamplerTriggerCondition_TC_BIT_TOGGLE_get();
  public final static native int SamplerTriggerCondition_TC_GREATER_get();
  public final static native int SamplerTriggerCondition_TC_GREATER_OR_EQUAL_get();
  public final static native int SamplerTriggerCondition_TC_LESS_get();
  public final static native int SamplerTriggerCondition_TC_LESS_OR_EQUAL_get();
  public final static native int SamplerTriggerCondition_TC_EQUAL_get();
  public final static native int SamplerTriggerCondition_TC_NOT_EQUAL_get();
  public final static native int SamplerTriggerCondition_TC_ONE_EDGE_get();
  public final static native int SamplerTriggerCondition_TC_MULTI_EDGE_get();
  public final static native void SamplerTrigger_condition_set(long jarg1, SamplerTrigger jarg1_, int jarg2);
  public final static native int SamplerTrigger_condition_get(long jarg1, SamplerTrigger jarg1_);
  public final static native void SamplerTrigger_address_set(long jarg1, SamplerTrigger jarg1_, long jarg2, OdIndex jarg2_);
  public final static native long SamplerTrigger_address_get(long jarg1, SamplerTrigger jarg1_);
  public final static native void SamplerTrigger_value_set(long jarg1, SamplerTrigger jarg1_, long jarg2);
  public final static native long SamplerTrigger_value_get(long jarg1, SamplerTrigger jarg1_);
  public final static native long new_SamplerTrigger();
  public final static native void delete_SamplerTrigger(long jarg1);
  public final static native void SamplerConfiguration_version_set(long jarg1, SamplerConfiguration jarg1_, long jarg2);
  public final static native long SamplerConfiguration_version_get(long jarg1, SamplerConfiguration jarg1_);
  public final static native long SamplerConfiguration_SAMPLER_CONFIGURATION_VERSION_get();
  public final static native void SamplerConfiguration_mode_set(long jarg1, SamplerConfiguration jarg1_, int jarg2);
  public final static native int SamplerConfiguration_mode_get(long jarg1, SamplerConfiguration jarg1_);
  public final static native void SamplerConfiguration_usingSoftwareImplementation_set(long jarg1, SamplerConfiguration jarg1_, boolean jarg2);
  public final static native boolean SamplerConfiguration_usingSoftwareImplementation_get(long jarg1, SamplerConfiguration jarg1_);
  public final static native void SamplerConfiguration_usingNewFWSamplerImplementation_set(long jarg1, SamplerConfiguration jarg1_, boolean jarg2);
  public final static native boolean SamplerConfiguration_usingNewFWSamplerImplementation_get(long jarg1, SamplerConfiguration jarg1_);
  public final static native void SamplerConfiguration_periodMilliseconds_set(long jarg1, SamplerConfiguration jarg1_, int jarg2);
  public final static native int SamplerConfiguration_periodMilliseconds_get(long jarg1, SamplerConfiguration jarg1_);
  public final static native void SamplerConfiguration_durationMilliseconds_set(long jarg1, SamplerConfiguration jarg1_, long jarg2);
  public final static native long SamplerConfiguration_durationMilliseconds_get(long jarg1, SamplerConfiguration jarg1_);
  public final static native void SamplerConfiguration_preTriggerNumberOfSamples_set(long jarg1, SamplerConfiguration jarg1_, int jarg2);
  public final static native int SamplerConfiguration_preTriggerNumberOfSamples_get(long jarg1, SamplerConfiguration jarg1_);
  public final static native void SamplerConfiguration_startTrigger_set(long jarg1, SamplerConfiguration jarg1_, long jarg2, SamplerTrigger jarg2_);
  public final static native long SamplerConfiguration_startTrigger_get(long jarg1, SamplerConfiguration jarg1_);
  public final static native void SamplerConfiguration_stopTrigger_set(long jarg1, SamplerConfiguration jarg1_, long jarg2, SamplerTrigger jarg2_);
  public final static native long SamplerConfiguration_stopTrigger_get(long jarg1, SamplerConfiguration jarg1_);
  public final static native void SamplerConfiguration_trackedAddresses_set(long jarg1, SamplerConfiguration jarg1_, long jarg2, OdIndexVector jarg2_);
  public final static native long SamplerConfiguration_trackedAddresses_get(long jarg1, SamplerConfiguration jarg1_);
  public final static native long SamplerConfiguration_MAX_TRACKED_ADDRESSES_get();
  public final static native long new_SamplerConfiguration();
  public final static native void delete_SamplerConfiguration(long jarg1);
  public final static native void SampledValue_value_set(long jarg1, SampledValue jarg1_, long jarg2);
  public final static native long SampledValue_value_get(long jarg1, SampledValue jarg1_);
  public final static native void SampledValue_collectTimeMsec_set(long jarg1, SampledValue jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger SampledValue_collectTimeMsec_get(long jarg1, SampledValue jarg1_);
  public final static native long new_SampledValue();
  public final static native void delete_SampledValue(long jarg1);
  public final static native void SampleData_iterationNumber_set(long jarg1, SampleData jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger SampleData_iterationNumber_get(long jarg1, SampleData jarg1_);
  public final static native void SampleData_sampledValues_set(long jarg1, SampleData jarg1_, long jarg2, SampledValueVector jarg2_);
  public final static native long SampleData_sampledValues_get(long jarg1, SampleData jarg1_);
  public final static native long new_SampleData();
  public final static native void delete_SampleData(long jarg1);
  public final static native long new_ResultSampleDataArray__SWIG_0();
  public final static native long new_ResultSampleDataArray__SWIG_1(long jarg1, SampleDataVector jarg1_);
  public final static native long new_ResultSampleDataArray__SWIG_2(String jarg1, int jarg2, long jarg3);
  public final static native long new_ResultSampleDataArray__SWIG_3(String jarg1, int jarg2);
  public final static native long new_ResultSampleDataArray__SWIG_4(String jarg1);
  public final static native long new_ResultSampleDataArray__SWIG_5(long jarg1, ResultSampleDataArray jarg1_);
  public final static native long new_ResultSampleDataArray__SWIG_6(long jarg1, Result jarg1_);
  public final static native void delete_ResultSampleDataArray(long jarg1);
  public final static native long ResultSampleDataArray_getResult(long jarg1, ResultSampleDataArray jarg1_);
  public final static native void delete_SamplerNotify(long jarg1);
  public final static native void SamplerNotify_notify(long jarg1, SamplerNotify jarg1_, long jarg2, ResultVoid jarg2_, int jarg3, long jarg4, SampleDataVector jarg4_, long jarg5);
  public final static native long new_SamplerNotify();
  public final static native void SamplerNotify_director_connect(SamplerNotify obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void SamplerNotify_change_ownership(SamplerNotify obj, long cptr, boolean take_or_release);
  public final static native void delete_SamplerInterface(long jarg1);
  public final static native long SamplerInterface_configure(long jarg1, SamplerInterface jarg1_, long jarg2, DeviceHandle jarg2_, long jarg3, SamplerConfiguration jarg3_);
  public final static native long SamplerInterface_start(long jarg1, SamplerInterface jarg1_, long jarg2, DeviceHandle jarg2_, long jarg3, SamplerNotify jarg3_, long jarg4);
  public final static native long SamplerInterface_getData(long jarg1, SamplerInterface jarg1_, long jarg2, DeviceHandle jarg2_);
  public final static native long SamplerInterface_stop(long jarg1, SamplerInterface jarg1_, long jarg2, DeviceHandle jarg2_);
  public final static native long SamplerInterface_getState(long jarg1, SamplerInterface jarg1_, long jarg2, DeviceHandle jarg2_);
  public final static native long SamplerInterface_getLastError(long jarg1, SamplerInterface jarg1_, long jarg2, DeviceHandle jarg2_);
  public final static native long new_ObjectDictionary();
  public final static native void delete_ObjectDictionary(long jarg1);
  public final static native long ObjectDictionary_getXmlFileName(long jarg1, ObjectDictionary jarg1_);
  public final static native long ObjectDictionary_getDeviceHandle(long jarg1, ObjectDictionary jarg1_);
  public final static native long ObjectDictionary_getObject(long jarg1, ObjectDictionary jarg1_, long jarg2, OdIndex jarg2_);
  public final static native long ObjectDictionary_getObjectEntry(long jarg1, ObjectDictionary jarg1_, int jarg2);
  public final static native long ObjectDictionary_readNumber(long jarg1, ObjectDictionary jarg1_, long jarg2, OdIndex jarg2_);
  public final static native long ObjectDictionary_readString(long jarg1, ObjectDictionary jarg1_, long jarg2, OdIndex jarg2_);
  public final static native long ObjectDictionary_readBytes(long jarg1, ObjectDictionary jarg1_, long jarg2, OdIndex jarg2_);
  public final static native long ObjectDictionary_writeNumber(long jarg1, ObjectDictionary jarg1_, long jarg2, OdIndex jarg2_, long jarg3);
  public final static native long ObjectDictionary_writeBytes(long jarg1, ObjectDictionary jarg1_, long jarg2, OdIndex jarg2_, long jarg3, ByteVector jarg3_);
  public final static native long ObjectDictionary_readNumberArray(long jarg1, ObjectDictionary jarg1_, int jarg2);
  public final static native long new_ObjectEntry();
  public final static native void delete_ObjectEntry(long jarg1);
  public final static native String ObjectEntry_getName(long jarg1, ObjectEntry jarg1_);
  public final static native boolean ObjectEntry_getPrivate(long jarg1, ObjectEntry jarg1_);
  public final static native int ObjectEntry_getIndex(long jarg1, ObjectEntry jarg1_);
  public final static native int ObjectEntry_getDataType(long jarg1, ObjectEntry jarg1_);
  public final static native int ObjectEntry_getObjectCode(long jarg1, ObjectEntry jarg1_);
  public final static native int ObjectEntry_getObjectSaveable(long jarg1, ObjectEntry jarg1_);
  public final static native short ObjectEntry_getMaxSubIndex(long jarg1, ObjectEntry jarg1_);
  public final static native long ObjectEntry_getSubEntry(long jarg1, ObjectEntry jarg1_, short jarg2);
  public final static native long new_ObjectSubEntry();
  public final static native void delete_ObjectSubEntry(long jarg1);
  public final static native String ObjectSubEntry_getName(long jarg1, ObjectSubEntry jarg1_);
  public final static native short ObjectSubEntry_getSubIndex(long jarg1, ObjectSubEntry jarg1_);
  public final static native int ObjectSubEntry_getDataType(long jarg1, ObjectSubEntry jarg1_);
  public final static native int ObjectSubEntry_getSdoAccess(long jarg1, ObjectSubEntry jarg1_);
  public final static native int ObjectSubEntry_getPdoAccess(long jarg1, ObjectSubEntry jarg1_);
  public final static native long ObjectSubEntry_getBitLength(long jarg1, ObjectSubEntry jarg1_);
  public final static native long ObjectSubEntry_getDefaultValueAsNumeric(long jarg1, ObjectSubEntry jarg1_, String jarg2);
  public final static native long ObjectSubEntry_getDefaultValueAsString(long jarg1, ObjectSubEntry jarg1_, String jarg2);
  public final static native long ObjectSubEntry_getDefaultValues(long jarg1, ObjectSubEntry jarg1_);
  public final static native long ObjectSubEntry_readNumber(long jarg1, ObjectSubEntry jarg1_);
  public final static native long ObjectSubEntry_readString(long jarg1, ObjectSubEntry jarg1_);
  public final static native long ObjectSubEntry_readBytes(long jarg1, ObjectSubEntry jarg1_);
  public final static native long ObjectSubEntry_writeNumber(long jarg1, ObjectSubEntry jarg1_, long jarg2);
  public final static native long ObjectSubEntry_writeBytes(long jarg1, ObjectSubEntry jarg1_, long jarg2, ByteVector jarg2_);
  public final static native String BUS_HARDWARE_ID_PROTOCOL_CANOPEN_get();
  public final static native String BUS_HARDWARE_ID_IXXAT_get();
  public final static native String BUS_HARDWARE_ID_ZK_USB_CAN_get();
  public final static native String BUS_HARDWARE_ID_PEAK_get();
  public final static native String BUS_HARDWARE_ID_PROTOCOL_MODBUS_RTU_get();
  public final static native String BUS_HARDWARE_ID_SERIAL_PORT_get();
  public final static native String BUS_HARDWARE_ID_PROTOCOL_MODBUS_VCP_get();
  public final static native String BUS_HARDWARE_ID_PROTOCOL_MSC_get();
  public final static native String BUS_HARDWARE_ID_NANOTEC_VCP_get();
  public final static native String BUS_HARDWARE_ID_USB_BUS_get();
  public final static native String BUS_HARDWARE_ID_PROTOCOL_MODBUS_TCP_get();
  public final static native String BUS_HARDWARE_ID_NETWORK_get();
  public final static native String BUS_HARDWARE_ID_PROTOCOL_RESTFULL_API_get();
  public final static native String BUS_HARDWARE_ID_PROTOCOL_ETHERCAT_get();
  public final static native long new_MacAddress__SWIG_0();
  public final static native long new_MacAddress__SWIG_1(long jarg1, MacAddress jarg1_);
  public final static native long MacAddress_size(long jarg1, MacAddress jarg1_);
  public final static native boolean MacAddress_isEmpty(long jarg1, MacAddress jarg1_);
  public final static native void MacAddress_fill(long jarg1, MacAddress jarg1_, short jarg2);
  public final static native short MacAddress_get(long jarg1, MacAddress jarg1_, int jarg2);
  public final static native void MacAddress_set(long jarg1, MacAddress jarg1_, int jarg2, short jarg3);
  public final static native void delete_MacAddress(long jarg1);
  public final static native long new_IntVector__SWIG_0();
  public final static native long new_IntVector__SWIG_1(long jarg1, IntVector jarg1_);
  public final static native long IntVector_capacity(long jarg1, IntVector jarg1_);
  public final static native void IntVector_reserve(long jarg1, IntVector jarg1_, long jarg2);
  public final static native boolean IntVector_isEmpty(long jarg1, IntVector jarg1_);
  public final static native void IntVector_clear(long jarg1, IntVector jarg1_);
  public final static native long new_IntVector__SWIG_2(int jarg1, long jarg2);
  public final static native int IntVector_doSize(long jarg1, IntVector jarg1_);
  public final static native void IntVector_doAdd__SWIG_0(long jarg1, IntVector jarg1_, long jarg2);
  public final static native void IntVector_doAdd__SWIG_1(long jarg1, IntVector jarg1_, int jarg2, long jarg3);
  public final static native long IntVector_doRemove(long jarg1, IntVector jarg1_, int jarg2);
  public final static native long IntVector_doGet(long jarg1, IntVector jarg1_, int jarg2);
  public final static native long IntVector_doSet(long jarg1, IntVector jarg1_, int jarg2, long jarg3);
  public final static native void IntVector_doRemoveRange(long jarg1, IntVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_IntVector(long jarg1);
  public final static native long new_ByteVector__SWIG_0();
  public final static native long new_ByteVector__SWIG_1(long jarg1, ByteVector jarg1_);
  public final static native long ByteVector_capacity(long jarg1, ByteVector jarg1_);
  public final static native void ByteVector_reserve(long jarg1, ByteVector jarg1_, long jarg2);
  public final static native boolean ByteVector_isEmpty(long jarg1, ByteVector jarg1_);
  public final static native void ByteVector_clear(long jarg1, ByteVector jarg1_);
  public final static native long new_ByteVector__SWIG_2(int jarg1, short jarg2);
  public final static native int ByteVector_doSize(long jarg1, ByteVector jarg1_);
  public final static native void ByteVector_doAdd__SWIG_0(long jarg1, ByteVector jarg1_, short jarg2);
  public final static native void ByteVector_doAdd__SWIG_1(long jarg1, ByteVector jarg1_, int jarg2, short jarg3);
  public final static native short ByteVector_doRemove(long jarg1, ByteVector jarg1_, int jarg2);
  public final static native short ByteVector_doGet(long jarg1, ByteVector jarg1_, int jarg2);
  public final static native short ByteVector_doSet(long jarg1, ByteVector jarg1_, int jarg2, short jarg3);
  public final static native void ByteVector_doRemoveRange(long jarg1, ByteVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_ByteVector(long jarg1);
  public final static native long new_BusHWIdVector__SWIG_0();
  public final static native long new_BusHWIdVector__SWIG_1(long jarg1, BusHWIdVector jarg1_);
  public final static native long BusHWIdVector_capacity(long jarg1, BusHWIdVector jarg1_);
  public final static native void BusHWIdVector_reserve(long jarg1, BusHWIdVector jarg1_, long jarg2);
  public final static native boolean BusHWIdVector_isEmpty(long jarg1, BusHWIdVector jarg1_);
  public final static native void BusHWIdVector_clear(long jarg1, BusHWIdVector jarg1_);
  public final static native long new_BusHWIdVector__SWIG_2(int jarg1, long jarg2, BusHardwareId jarg2_);
  public final static native int BusHWIdVector_doSize(long jarg1, BusHWIdVector jarg1_);
  public final static native void BusHWIdVector_doAdd__SWIG_0(long jarg1, BusHWIdVector jarg1_, long jarg2, BusHardwareId jarg2_);
  public final static native void BusHWIdVector_doAdd__SWIG_1(long jarg1, BusHWIdVector jarg1_, int jarg2, long jarg3, BusHardwareId jarg3_);
  public final static native long BusHWIdVector_doRemove(long jarg1, BusHWIdVector jarg1_, int jarg2);
  public final static native long BusHWIdVector_doGet(long jarg1, BusHWIdVector jarg1_, int jarg2);
  public final static native long BusHWIdVector_doSet(long jarg1, BusHWIdVector jarg1_, int jarg2, long jarg3, BusHardwareId jarg3_);
  public final static native void BusHWIdVector_doRemoveRange(long jarg1, BusHWIdVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_BusHWIdVector(long jarg1);
  public final static native long new_DeviceIdVector__SWIG_0();
  public final static native long new_DeviceIdVector__SWIG_1(long jarg1, DeviceIdVector jarg1_);
  public final static native long DeviceIdVector_capacity(long jarg1, DeviceIdVector jarg1_);
  public final static native void DeviceIdVector_reserve(long jarg1, DeviceIdVector jarg1_, long jarg2);
  public final static native boolean DeviceIdVector_isEmpty(long jarg1, DeviceIdVector jarg1_);
  public final static native void DeviceIdVector_clear(long jarg1, DeviceIdVector jarg1_);
  public final static native long new_DeviceIdVector__SWIG_2(int jarg1, long jarg2, DeviceId jarg2_);
  public final static native int DeviceIdVector_doSize(long jarg1, DeviceIdVector jarg1_);
  public final static native void DeviceIdVector_doAdd__SWIG_0(long jarg1, DeviceIdVector jarg1_, long jarg2, DeviceId jarg2_);
  public final static native void DeviceIdVector_doAdd__SWIG_1(long jarg1, DeviceIdVector jarg1_, int jarg2, long jarg3, DeviceId jarg3_);
  public final static native long DeviceIdVector_doRemove(long jarg1, DeviceIdVector jarg1_, int jarg2);
  public final static native long DeviceIdVector_doGet(long jarg1, DeviceIdVector jarg1_, int jarg2);
  public final static native long DeviceIdVector_doSet(long jarg1, DeviceIdVector jarg1_, int jarg2, long jarg3, DeviceId jarg3_);
  public final static native void DeviceIdVector_doRemoveRange(long jarg1, DeviceIdVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_DeviceIdVector(long jarg1);
  public final static native long new_ProfinetDeviceVector__SWIG_0();
  public final static native long new_ProfinetDeviceVector__SWIG_1(long jarg1, ProfinetDeviceVector jarg1_);
  public final static native long ProfinetDeviceVector_capacity(long jarg1, ProfinetDeviceVector jarg1_);
  public final static native void ProfinetDeviceVector_reserve(long jarg1, ProfinetDeviceVector jarg1_, long jarg2);
  public final static native boolean ProfinetDeviceVector_isEmpty(long jarg1, ProfinetDeviceVector jarg1_);
  public final static native void ProfinetDeviceVector_clear(long jarg1, ProfinetDeviceVector jarg1_);
  public final static native long new_ProfinetDeviceVector__SWIG_2(int jarg1, long jarg2, ProfinetDevice jarg2_);
  public final static native int ProfinetDeviceVector_doSize(long jarg1, ProfinetDeviceVector jarg1_);
  public final static native void ProfinetDeviceVector_doAdd__SWIG_0(long jarg1, ProfinetDeviceVector jarg1_, long jarg2, ProfinetDevice jarg2_);
  public final static native void ProfinetDeviceVector_doAdd__SWIG_1(long jarg1, ProfinetDeviceVector jarg1_, int jarg2, long jarg3, ProfinetDevice jarg3_);
  public final static native long ProfinetDeviceVector_doRemove(long jarg1, ProfinetDeviceVector jarg1_, int jarg2);
  public final static native long ProfinetDeviceVector_doGet(long jarg1, ProfinetDeviceVector jarg1_, int jarg2);
  public final static native long ProfinetDeviceVector_doSet(long jarg1, ProfinetDeviceVector jarg1_, int jarg2, long jarg3, ProfinetDevice jarg3_);
  public final static native void ProfinetDeviceVector_doRemoveRange(long jarg1, ProfinetDeviceVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_ProfinetDeviceVector(long jarg1);
  public final static native long new_OdIndexVector__SWIG_0();
  public final static native long new_OdIndexVector__SWIG_1(long jarg1, OdIndexVector jarg1_);
  public final static native long OdIndexVector_capacity(long jarg1, OdIndexVector jarg1_);
  public final static native void OdIndexVector_reserve(long jarg1, OdIndexVector jarg1_, long jarg2);
  public final static native boolean OdIndexVector_isEmpty(long jarg1, OdIndexVector jarg1_);
  public final static native void OdIndexVector_clear(long jarg1, OdIndexVector jarg1_);
  public final static native long new_OdIndexVector__SWIG_2(int jarg1, long jarg2, OdIndex jarg2_);
  public final static native int OdIndexVector_doSize(long jarg1, OdIndexVector jarg1_);
  public final static native void OdIndexVector_doAdd__SWIG_0(long jarg1, OdIndexVector jarg1_, long jarg2, OdIndex jarg2_);
  public final static native void OdIndexVector_doAdd__SWIG_1(long jarg1, OdIndexVector jarg1_, int jarg2, long jarg3, OdIndex jarg3_);
  public final static native long OdIndexVector_doRemove(long jarg1, OdIndexVector jarg1_, int jarg2);
  public final static native long OdIndexVector_doGet(long jarg1, OdIndexVector jarg1_, int jarg2);
  public final static native long OdIndexVector_doSet(long jarg1, OdIndexVector jarg1_, int jarg2, long jarg3, OdIndex jarg3_);
  public final static native void OdIndexVector_doRemoveRange(long jarg1, OdIndexVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_OdIndexVector(long jarg1);
  public final static native long new_SampleDataVector__SWIG_0();
  public final static native long new_SampleDataVector__SWIG_1(long jarg1, SampleDataVector jarg1_);
  public final static native long SampleDataVector_capacity(long jarg1, SampleDataVector jarg1_);
  public final static native void SampleDataVector_reserve(long jarg1, SampleDataVector jarg1_, long jarg2);
  public final static native boolean SampleDataVector_isEmpty(long jarg1, SampleDataVector jarg1_);
  public final static native void SampleDataVector_clear(long jarg1, SampleDataVector jarg1_);
  public final static native long new_SampleDataVector__SWIG_2(int jarg1, long jarg2, SampleData jarg2_);
  public final static native int SampleDataVector_doSize(long jarg1, SampleDataVector jarg1_);
  public final static native void SampleDataVector_doAdd__SWIG_0(long jarg1, SampleDataVector jarg1_, long jarg2, SampleData jarg2_);
  public final static native void SampleDataVector_doAdd__SWIG_1(long jarg1, SampleDataVector jarg1_, int jarg2, long jarg3, SampleData jarg3_);
  public final static native long SampleDataVector_doRemove(long jarg1, SampleDataVector jarg1_, int jarg2);
  public final static native long SampleDataVector_doGet(long jarg1, SampleDataVector jarg1_, int jarg2);
  public final static native long SampleDataVector_doSet(long jarg1, SampleDataVector jarg1_, int jarg2, long jarg3, SampleData jarg3_);
  public final static native void SampleDataVector_doRemoveRange(long jarg1, SampleDataVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_SampleDataVector(long jarg1);
  public final static native long new_SampledValueVector__SWIG_0();
  public final static native long new_SampledValueVector__SWIG_1(long jarg1, SampledValueVector jarg1_);
  public final static native long SampledValueVector_capacity(long jarg1, SampledValueVector jarg1_);
  public final static native void SampledValueVector_reserve(long jarg1, SampledValueVector jarg1_, long jarg2);
  public final static native boolean SampledValueVector_isEmpty(long jarg1, SampledValueVector jarg1_);
  public final static native void SampledValueVector_clear(long jarg1, SampledValueVector jarg1_);
  public final static native long new_SampledValueVector__SWIG_2(int jarg1, long jarg2, SampledValue jarg2_);
  public final static native int SampledValueVector_doSize(long jarg1, SampledValueVector jarg1_);
  public final static native void SampledValueVector_doAdd__SWIG_0(long jarg1, SampledValueVector jarg1_, long jarg2, SampledValue jarg2_);
  public final static native void SampledValueVector_doAdd__SWIG_1(long jarg1, SampledValueVector jarg1_, int jarg2, long jarg3, SampledValue jarg3_);
  public final static native long SampledValueVector_doRemove(long jarg1, SampledValueVector jarg1_, int jarg2);
  public final static native long SampledValueVector_doGet(long jarg1, SampledValueVector jarg1_, int jarg2);
  public final static native long SampledValueVector_doSet(long jarg1, SampledValueVector jarg1_, int jarg2, long jarg3, SampledValue jarg3_);
  public final static native void SampledValueVector_doRemoveRange(long jarg1, SampledValueVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_SampledValueVector(long jarg1);
  public final static native long new_StringIntMap__SWIG_0();
  public final static native long new_StringIntMap__SWIG_1(long jarg1, StringIntMap jarg1_);
  public final static native long StringIntMap_Iterator_getNextUnchecked(long jarg1, StringIntMap.Iterator jarg1_);
  public final static native boolean StringIntMap_Iterator_isNot(long jarg1, StringIntMap.Iterator jarg1_, long jarg2, StringIntMap.Iterator jarg2_);
  public final static native String StringIntMap_Iterator_getKey(long jarg1, StringIntMap.Iterator jarg1_);
  public final static native int StringIntMap_Iterator_getValue(long jarg1, StringIntMap.Iterator jarg1_);
  public final static native void StringIntMap_Iterator_setValue(long jarg1, StringIntMap.Iterator jarg1_, int jarg2);
  public final static native void delete_StringIntMap_Iterator(long jarg1);
  public final static native boolean StringIntMap_isEmpty(long jarg1, StringIntMap jarg1_);
  public final static native void StringIntMap_clear(long jarg1, StringIntMap jarg1_);
  public final static native long StringIntMap_find(long jarg1, StringIntMap jarg1_, String jarg2);
  public final static native long StringIntMap_begin(long jarg1, StringIntMap jarg1_);
  public final static native long StringIntMap_end(long jarg1, StringIntMap jarg1_);
  public final static native int StringIntMap_sizeImpl(long jarg1, StringIntMap jarg1_);
  public final static native boolean StringIntMap_containsImpl(long jarg1, StringIntMap jarg1_, String jarg2);
  public final static native void StringIntMap_putUnchecked(long jarg1, StringIntMap jarg1_, String jarg2, int jarg3);
  public final static native void StringIntMap_removeUnchecked(long jarg1, StringIntMap jarg1_, long jarg2, StringIntMap.Iterator jarg2_);
  public final static native void delete_StringIntMap(long jarg1);
  public final static native long new_StringStringMap__SWIG_0();
  public final static native long new_StringStringMap__SWIG_1(long jarg1, StringStringMap jarg1_);
  public final static native long StringStringMap_Iterator_getNextUnchecked(long jarg1, StringStringMap.Iterator jarg1_);
  public final static native boolean StringStringMap_Iterator_isNot(long jarg1, StringStringMap.Iterator jarg1_, long jarg2, StringStringMap.Iterator jarg2_);
  public final static native String StringStringMap_Iterator_getKey(long jarg1, StringStringMap.Iterator jarg1_);
  public final static native String StringStringMap_Iterator_getValue(long jarg1, StringStringMap.Iterator jarg1_);
  public final static native void StringStringMap_Iterator_setValue(long jarg1, StringStringMap.Iterator jarg1_, String jarg2);
  public final static native void delete_StringStringMap_Iterator(long jarg1);
  public final static native boolean StringStringMap_isEmpty(long jarg1, StringStringMap jarg1_);
  public final static native void StringStringMap_clear(long jarg1, StringStringMap jarg1_);
  public final static native long StringStringMap_find(long jarg1, StringStringMap jarg1_, String jarg2);
  public final static native long StringStringMap_begin(long jarg1, StringStringMap jarg1_);
  public final static native long StringStringMap_end(long jarg1, StringStringMap jarg1_);
  public final static native int StringStringMap_sizeImpl(long jarg1, StringStringMap jarg1_);
  public final static native boolean StringStringMap_containsImpl(long jarg1, StringStringMap jarg1_, String jarg2);
  public final static native void StringStringMap_putUnchecked(long jarg1, StringStringMap jarg1_, String jarg2, String jarg3);
  public final static native void StringStringMap_removeUnchecked(long jarg1, StringStringMap jarg1_, long jarg2, StringStringMap.Iterator jarg2_);
  public final static native void delete_StringStringMap(long jarg1);
  public final static native String CanBaudRate_BAUD_RATE_1000K_get(long jarg1, CanBaudRate jarg1_);
  public final static native String CanBaudRate_BAUD_RATE_800K_get(long jarg1, CanBaudRate jarg1_);
  public final static native String CanBaudRate_BAUD_RATE_500K_get(long jarg1, CanBaudRate jarg1_);
  public final static native String CanBaudRate_BAUD_RATE_250K_get(long jarg1, CanBaudRate jarg1_);
  public final static native String CanBaudRate_BAUD_RATE_125K_get(long jarg1, CanBaudRate jarg1_);
  public final static native String CanBaudRate_BAUD_RATE_100K_get(long jarg1, CanBaudRate jarg1_);
  public final static native String CanBaudRate_BAUD_RATE_50K_get(long jarg1, CanBaudRate jarg1_);
  public final static native String CanBaudRate_BAUD_RATE_20K_get(long jarg1, CanBaudRate jarg1_);
  public final static native String CanBaudRate_BAUD_RATE_10K_get(long jarg1, CanBaudRate jarg1_);
  public final static native String CanBaudRate_BAUD_RATE_5K_get(long jarg1, CanBaudRate jarg1_);
  public final static native long new_CanBaudRate();
  public final static native void delete_CanBaudRate(long jarg1);
  public final static native String IxxatAdapterBusNumber_BUS_NUMBER_0_DEFAULT_get(long jarg1, IxxatAdapterBusNumber jarg1_);
  public final static native String IxxatAdapterBusNumber_BUS_NUMBER_1_get(long jarg1, IxxatAdapterBusNumber jarg1_);
  public final static native String IxxatAdapterBusNumber_BUS_NUMBER_2_get(long jarg1, IxxatAdapterBusNumber jarg1_);
  public final static native String IxxatAdapterBusNumber_BUS_NUMBER_3_get(long jarg1, IxxatAdapterBusNumber jarg1_);
  public final static native long new_IxxatAdapterBusNumber();
  public final static native void delete_IxxatAdapterBusNumber(long jarg1);
  public final static native int PCAN_USBBUS1_get();
  public final static native int PCAN_USBBUS2_get();
  public final static native int PCAN_USBBUS3_get();
  public final static native int PCAN_USBBUS4_get();
  public final static native int PCAN_USBBUS5_get();
  public final static native int PCAN_USBBUS6_get();
  public final static native int PCAN_USBBUS7_get();
  public final static native int PCAN_USBBUS8_get();
  public final static native int PCAN_USBBUS9_get();
  public final static native int PCAN_USBBUS10_get();
  public final static native int PCAN_USBBUS11_get();
  public final static native int PCAN_USBBUS12_get();
  public final static native int PCAN_USBBUS13_get();
  public final static native int PCAN_USBBUS14_get();
  public final static native int PCAN_USBBUS15_get();
  public final static native int PCAN_USBBUS16_get();
  public final static native String PeakAdapterBusNumber_BUS_NUMBER_1_DEFAULT_get(long jarg1, PeakAdapterBusNumber jarg1_);
  public final static native String PeakAdapterBusNumber_BUS_NUMBER_2_get(long jarg1, PeakAdapterBusNumber jarg1_);
  public final static native String PeakAdapterBusNumber_BUS_NUMBER_3_get(long jarg1, PeakAdapterBusNumber jarg1_);
  public final static native String PeakAdapterBusNumber_BUS_NUMBER_4_get(long jarg1, PeakAdapterBusNumber jarg1_);
  public final static native String PeakAdapterBusNumber_BUS_NUMBER_5_get(long jarg1, PeakAdapterBusNumber jarg1_);
  public final static native String PeakAdapterBusNumber_BUS_NUMBER_6_get(long jarg1, PeakAdapterBusNumber jarg1_);
  public final static native String PeakAdapterBusNumber_BUS_NUMBER_7_get(long jarg1, PeakAdapterBusNumber jarg1_);
  public final static native String PeakAdapterBusNumber_BUS_NUMBER_8_get(long jarg1, PeakAdapterBusNumber jarg1_);
  public final static native String PeakAdapterBusNumber_BUS_NUMBER_9_get(long jarg1, PeakAdapterBusNumber jarg1_);
  public final static native String PeakAdapterBusNumber_BUS_NUMBER_10_get(long jarg1, PeakAdapterBusNumber jarg1_);
  public final static native String PeakAdapterBusNumber_BUS_NUMBER_11_get(long jarg1, PeakAdapterBusNumber jarg1_);
  public final static native String PeakAdapterBusNumber_BUS_NUMBER_12_get(long jarg1, PeakAdapterBusNumber jarg1_);
  public final static native String PeakAdapterBusNumber_BUS_NUMBER_13_get(long jarg1, PeakAdapterBusNumber jarg1_);
  public final static native String PeakAdapterBusNumber_BUS_NUMBER_14_get(long jarg1, PeakAdapterBusNumber jarg1_);
  public final static native String PeakAdapterBusNumber_BUS_NUMBER_15_get(long jarg1, PeakAdapterBusNumber jarg1_);
  public final static native String PeakAdapterBusNumber_BUS_NUMBER_16_get(long jarg1, PeakAdapterBusNumber jarg1_);
  public final static native long new_PeakAdapterBusNumber();
  public final static native void delete_PeakAdapterBusNumber(long jarg1);
  public final static native String Ixxat_ADAPTER_BUS_NUMBER_OPTIONS_NAME_get(long jarg1, Ixxat jarg1_);
  public final static native long Ixxat_adapterBusNumber_get(long jarg1, Ixxat jarg1_);
  public final static native long new_Ixxat();
  public final static native void delete_Ixxat(long jarg1);
  public final static native String Peak_ADAPTER_BUS_NUMBER_OPTIONS_NAME_get(long jarg1, Peak jarg1_);
  public final static native long Peak_adapterBusNumber_get(long jarg1, Peak jarg1_);
  public final static native long new_Peak();
  public final static native void delete_Peak(long jarg1);
  public final static native String CanBus_BAUD_RATE_OPTIONS_NAME_get(long jarg1, CanBus jarg1_);
  public final static native long CanBus_baudRate_get(long jarg1, CanBus jarg1_);
  public final static native long CanBus_ixxat_get(long jarg1, CanBus jarg1_);
  public final static native long new_CanBus();
  public final static native void delete_CanBus(long jarg1);
  public final static native String SerialParity_NONE_get(long jarg1, SerialParity jarg1_);
  public final static native String SerialParity_ODD_get(long jarg1, SerialParity jarg1_);
  public final static native String SerialParity_EVEN_get(long jarg1, SerialParity jarg1_);
  public final static native String SerialParity_MARK_get(long jarg1, SerialParity jarg1_);
  public final static native String SerialParity_SPACE_get(long jarg1, SerialParity jarg1_);
  public final static native long new_SerialParity();
  public final static native void delete_SerialParity(long jarg1);
  public final static native String SerialBaudRate_BAUD_RATE_7200_get(long jarg1, SerialBaudRate jarg1_);
  public final static native String SerialBaudRate_BAUD_RATE_9600_get(long jarg1, SerialBaudRate jarg1_);
  public final static native String SerialBaudRate_BAUD_RATE_14400_get(long jarg1, SerialBaudRate jarg1_);
  public final static native String SerialBaudRate_BAUD_RATE_19200_get(long jarg1, SerialBaudRate jarg1_);
  public final static native String SerialBaudRate_BAUD_RATE_38400_get(long jarg1, SerialBaudRate jarg1_);
  public final static native String SerialBaudRate_BAUD_RATE_56000_get(long jarg1, SerialBaudRate jarg1_);
  public final static native String SerialBaudRate_BAUD_RATE_57600_get(long jarg1, SerialBaudRate jarg1_);
  public final static native String SerialBaudRate_BAUD_RATE_115200_get(long jarg1, SerialBaudRate jarg1_);
  public final static native String SerialBaudRate_BAUD_RATE_128000_get(long jarg1, SerialBaudRate jarg1_);
  public final static native String SerialBaudRate_BAUD_RATE_256000_get(long jarg1, SerialBaudRate jarg1_);
  public final static native long new_SerialBaudRate();
  public final static native void delete_SerialBaudRate(long jarg1);
  public final static native String Serial_BAUD_RATE_OPTIONS_NAME_get(long jarg1, Serial jarg1_);
  public final static native long Serial_baudRate_get(long jarg1, Serial jarg1_);
  public final static native String Serial_PARITY_OPTIONS_NAME_get(long jarg1, Serial jarg1_);
  public final static native long Serial_parity_get(long jarg1, Serial jarg1_);
  public final static native long new_Serial();
  public final static native void delete_Serial(long jarg1);
  public final static native String RESTfulBus_CONNECT_TIMEOUT_OPTION_NAME_get(long jarg1, RESTfulBus jarg1_);
  public final static native long RESTfulBus_DEFAULT_CONNECT_TIMEOUT_get(long jarg1, RESTfulBus jarg1_);
  public final static native String RESTfulBus_REQUEST_TIMEOUT_OPTION_NAME_get(long jarg1, RESTfulBus jarg1_);
  public final static native long RESTfulBus_DEFAULT_REQUEST_TIMEOUT_get(long jarg1, RESTfulBus jarg1_);
  public final static native String RESTfulBus_RESPONSE_TIMEOUT_OPTION_NAME_get(long jarg1, RESTfulBus jarg1_);
  public final static native long RESTfulBus_DEFAULT_RESPONSE_TIMEOUT_get(long jarg1, RESTfulBus jarg1_);
  public final static native long new_RESTfulBus();
  public final static native void delete_RESTfulBus(long jarg1);
  public final static native String EtherCATBus_NETWORK_FIRMWARE_STATE_OPTION_NAME_get(long jarg1, EtherCATBus jarg1_);
  public final static native String EtherCATBus_DEFAULT_NETWORK_FIRMWARE_STATE_get(long jarg1, EtherCATBus jarg1_);
  public final static native String EtherCATBus_EXCLUSIVE_LOCK_TIMEOUT_OPTION_NAME_get(long jarg1, EtherCATBus jarg1_);
  public final static native long EtherCATBus_DEFAULT_EXCLUSIVE_LOCK_TIMEOUT_get(long jarg1, EtherCATBus jarg1_);
  public final static native String EtherCATBus_SHARED_LOCK_TIMEOUT_OPTION_NAME_get(long jarg1, EtherCATBus jarg1_);
  public final static native long EtherCATBus_DEFAULT_SHARED_LOCK_TIMEOUT_get(long jarg1, EtherCATBus jarg1_);
  public final static native String EtherCATBus_READ_TIMEOUT_OPTION_NAME_get(long jarg1, EtherCATBus jarg1_);
  public final static native long EtherCATBus_DEFAULT_READ_TIMEOUT_get(long jarg1, EtherCATBus jarg1_);
  public final static native String EtherCATBus_WRITE_TIMEOUT_OPTION_NAME_get(long jarg1, EtherCATBus jarg1_);
  public final static native long EtherCATBus_DEFAULT_WRITE_TIMEOUT_get(long jarg1, EtherCATBus jarg1_);
  public final static native String EtherCATBus_READ_WRITE_ATTEMPTS_OPTION_NAME_get(long jarg1, EtherCATBus jarg1_);
  public final static native long EtherCATBus_DEFAULT_READ_WRITE_ATTEMPTS_get(long jarg1, EtherCATBus jarg1_);
  public final static native String EtherCATBus_CHANGE_NETWORK_STATE_ATTEMPTS_OPTION_NAME_get(long jarg1, EtherCATBus jarg1_);
  public final static native long EtherCATBus_DEFAULT_CHANGE_NETWORK_STATE_ATTEMPTS_get(long jarg1, EtherCATBus jarg1_);
  public final static native String EtherCATBus_PDO_IO_ENABLED_OPTION_NAME_get(long jarg1, EtherCATBus jarg1_);
  public final static native String EtherCATBus_DEFAULT_PDO_IO_ENABLED_get(long jarg1, EtherCATBus jarg1_);
  public final static native long new_EtherCATBus();
  public final static native void delete_EtherCATBus(long jarg1);
  public final static native long BusHwOptionsDefault_canBus_get(long jarg1, BusHwOptionsDefault jarg1_);
  public final static native long BusHwOptionsDefault_serial_get(long jarg1, BusHwOptionsDefault jarg1_);
  public final static native long BusHwOptionsDefault_restfulBus_get(long jarg1, BusHwOptionsDefault jarg1_);
  public final static native long BusHwOptionsDefault_ethercatBus_get(long jarg1, BusHwOptionsDefault jarg1_);
  public final static native long new_BusHwOptionsDefault();
  public final static native void delete_BusHwOptionsDefault(long jarg1);
  public final static native long busHwOptionsDefaults_get();
  public final static native void delete_NanoLibAccessor(long jarg1);
  public final static native void NanoLibAccessor_setLoggingLevel(long jarg1, NanoLibAccessor jarg1_, int jarg2);
  public final static native void NanoLibAccessor_setLoggingCallback(long jarg1, NanoLibAccessor jarg1_, long jarg2, NlcLoggingCallback jarg2_, int jarg3);
  public final static native void NanoLibAccessor_unsetLoggingCallback(long jarg1, NanoLibAccessor jarg1_);
  public final static native long NanoLibAccessor_listAvailableBusHardware(long jarg1, NanoLibAccessor jarg1_);
  public final static native long NanoLibAccessor_openBusHardwareWithProtocol(long jarg1, NanoLibAccessor jarg1_, long jarg2, BusHardwareId jarg2_, long jarg3, BusHardwareOptions jarg3_);
  public final static native long NanoLibAccessor_closeBusHardware(long jarg1, NanoLibAccessor jarg1_, long jarg2, BusHardwareId jarg2_);
  public final static native long NanoLibAccessor_setBusState(long jarg1, NanoLibAccessor jarg1_, long jarg2, BusHardwareId jarg2_, String jarg3);
  public final static native long NanoLibAccessor_addDevice(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceId jarg2_);
  public final static native long NanoLibAccessor_removeDevice(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_);
  public final static native long NanoLibAccessor_getDeviceId(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_);
  public final static native long NanoLibAccessor_getDeviceIds(long jarg1, NanoLibAccessor jarg1_);
  public final static native long NanoLibAccessor_connectDevice(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_);
  public final static native long NanoLibAccessor_disconnectDevice(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_);
  public final static native long NanoLibAccessor_rebootDevice(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_);
  public final static native long NanoLibAccessor_getDeviceVendorId(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_);
  public final static native long NanoLibAccessor_getDeviceProductCode(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_);
  public final static native long NanoLibAccessor_getDeviceName(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_);
  public final static native long NanoLibAccessor_getDeviceHardwareVersion(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_);
  public final static native long NanoLibAccessor_getDeviceFirmwareBuildId(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_);
  public final static native long NanoLibAccessor_getDeviceBootloaderBuildId(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_);
  public final static native long NanoLibAccessor_getDeviceSerialNumber(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_);
  public final static native long NanoLibAccessor_getDeviceUid(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_);
  public final static native long NanoLibAccessor_getDeviceBootloaderVersion(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_);
  public final static native long NanoLibAccessor_getDeviceHardwareGroup(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_);
  public final static native long NanoLibAccessor_getConnectionState(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_);
  public final static native long NanoLibAccessor_checkConnectionState(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_);
  public final static native long NanoLibAccessor_getDeviceState(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_);
  public final static native long NanoLibAccessor_setDeviceState(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_, String jarg3);
  public final static native long NanoLibAccessor_scanDevices(long jarg1, NanoLibAccessor jarg1_, long jarg2, BusHardwareId jarg2_, long jarg3, NlcScanBusCallback jarg3_);
  public final static native long NanoLibAccessor_getProtocolSpecificAccessor(long jarg1, NanoLibAccessor jarg1_, long jarg2, BusHardwareId jarg2_);
  public final static native boolean NanoLibAccessor_isBusHardwareOpen(long jarg1, NanoLibAccessor jarg1_, long jarg2, BusHardwareId jarg2_);
  public final static native long NanoLibAccessor_readNumber(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_, long jarg3, OdIndex jarg3_);
  public final static native long NanoLibAccessor_readString(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_, long jarg3, OdIndex jarg3_);
  public final static native long NanoLibAccessor_readBytes(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_, long jarg3, OdIndex jarg3_);
  public final static native long NanoLibAccessor_writeNumber(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_, long jarg3, long jarg4, OdIndex jarg4_, long jarg5);
  public final static native long NanoLibAccessor_writeBytes(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_, long jarg3, ByteVector jarg3_, long jarg4, OdIndex jarg4_);
  public final static native long NanoLibAccessor_readNumberArray(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_, int jarg3);
  public final static native long NanoLibAccessor_uploadFirmwareFromFile(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_, String jarg3, long jarg4, NlcDataTransferCallback jarg4_);
  public final static native long NanoLibAccessor_uploadFirmware(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_, long jarg3, ByteVector jarg3_, long jarg4, NlcDataTransferCallback jarg4_);
  public final static native long NanoLibAccessor_uploadBootloaderFromFile(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_, String jarg3, long jarg4, NlcDataTransferCallback jarg4_);
  public final static native long NanoLibAccessor_uploadBootloader(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_, long jarg3, ByteVector jarg3_, long jarg4, NlcDataTransferCallback jarg4_);
  public final static native long NanoLibAccessor_uploadBootloaderFirmwareFromFile(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_, String jarg3, String jarg4, long jarg5, NlcDataTransferCallback jarg5_);
  public final static native long NanoLibAccessor_uploadBootloaderFirmware(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_, long jarg3, ByteVector jarg3_, long jarg4, ByteVector jarg4_, long jarg5, NlcDataTransferCallback jarg5_);
  public final static native long NanoLibAccessor_uploadNanoJFromFile(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_, String jarg3, long jarg4, NlcDataTransferCallback jarg4_);
  public final static native long NanoLibAccessor_uploadNanoJ(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_, long jarg3, ByteVector jarg3_, long jarg4, NlcDataTransferCallback jarg4_);
  public final static native long NanoLibAccessor_getObjectDictionaryLibrary(long jarg1, NanoLibAccessor jarg1_);
  public final static native long NanoLibAccessor_assignObjectDictionary(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_, long jarg3, ObjectDictionary jarg3_);
  public final static native long NanoLibAccessor_autoAssignObjectDictionary(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_, String jarg3);
  public final static native long NanoLibAccessor_getAssignedObjectDictionary(long jarg1, NanoLibAccessor jarg1_, long jarg2, DeviceHandle jarg2_);
  public final static native long NanoLibAccessor_getProfinetDCP(long jarg1, NanoLibAccessor jarg1_);
  public final static native long NanoLibAccessor_getSamplerInterface(long jarg1, NanoLibAccessor jarg1_);
  public final static native long getNanoLibAccessor();
  public final static native long ResultVoid_SWIGUpcast(long jarg1);
  public final static native long ResultInt_SWIGUpcast(long jarg1);
  public final static native long ResultString_SWIGUpcast(long jarg1);
  public final static native long ResultArrayInt_SWIGUpcast(long jarg1);
  public final static native long ResultArrayByte_SWIGUpcast(long jarg1);
  public final static native long ResultBusHwIds_SWIGUpcast(long jarg1);
  public final static native long ResultDeviceId_SWIGUpcast(long jarg1);
  public final static native long ResultDeviceIds_SWIGUpcast(long jarg1);
  public final static native long ResultDeviceHandle_SWIGUpcast(long jarg1);
  public final static native long ResultConnectionState_SWIGUpcast(long jarg1);
  public final static native long ResultObjectEntry_SWIGUpcast(long jarg1);
  public final static native long ResultObjectSubEntry_SWIGUpcast(long jarg1);
  public final static native long ResultObjectDictionary_SWIGUpcast(long jarg1);
  public final static native long ResultProfinetDevices_SWIGUpcast(long jarg1);
  public final static native long ResultSamplerState_SWIGUpcast(long jarg1);
  public final static native long ResultSampleDataArray_SWIGUpcast(long jarg1);

  public static long SwigDirector_NlcCallback_callback(NlcCallback jself) {
    return ResultVoid.getCPtr(jself.callback());
  }
  public static long SwigDirector_NlcDataTransferCallback_callback(NlcDataTransferCallback jself, int info, int data) {
    return ResultVoid.getCPtr(jself.callback(DataTransferInfo.swigToEnum(info), data));
  }
  public static long SwigDirector_NlcScanBusCallback_callback(NlcScanBusCallback jself, int info, long devicesFound, int data) {
    return ResultVoid.getCPtr(jself.callback(BusScanInfo.swigToEnum(info), new DeviceIdVector(devicesFound, false), data));
  }
  public static void SwigDirector_NlcLoggingCallback_callback(NlcLoggingCallback jself, String payload_str, String formatted_str, String logger_name, long log_level, java.math.BigInteger time_since_epoch, long thread_id) {
    jself.callback(payload_str, formatted_str, logger_name, log_level, time_since_epoch, thread_id);
  }
  public static void SwigDirector_SamplerNotify_notify(SamplerNotify jself, long lastError, int samplerState, long sampleDatas, long applicationData) {
    jself.notify(new ResultVoid(lastError, false), SamplerState.swigToEnum(samplerState), new SampleDataVector(sampleDatas, false), applicationData);
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
