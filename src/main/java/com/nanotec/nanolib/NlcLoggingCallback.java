/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.nanotec.nanolib;

public class NlcLoggingCallback {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected NlcLoggingCallback(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(NlcLoggingCallback obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(NlcLoggingCallback obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        NanolibJNI.delete_NlcLoggingCallback(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    NanolibJNI.NlcLoggingCallback_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    NanolibJNI.NlcLoggingCallback_change_ownership(this, swigCPtr, true);
  }

  public void callback(String payload_str, String formatted_str, String logger_name, long log_level, java.math.BigInteger time_since_epoch, long thread_id) {
    NanolibJNI.NlcLoggingCallback_callback(swigCPtr, this, payload_str, formatted_str, logger_name, log_level, time_since_epoch, thread_id);
  }

  public NlcLoggingCallback() {
    this(NanolibJNI.new_NlcLoggingCallback(), true);
    NanolibJNI.NlcLoggingCallback_director_connect(this, swigCPtr, true, true);
  }

}
